/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Admin;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.CityCatalog;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author Dimple Patel
 */
public class PersonDirectoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonDirectoryJPanel
     */
    
    private JPanel adminBodyJPanel;
    private PersonDirectory personDirectory;
    private CityCatalog cityCatalog;
    private PatientDirectory patientDirectory;
    
    public PersonDirectoryJPanel(JPanel adminBodyJPanel, PersonDirectory personDirectory, CityCatalog cityCatalog, PatientDirectory patientDirectory) {
        this.adminBodyJPanel = adminBodyJPanel;
        this.personDirectory = personDirectory;
        this.cityCatalog = cityCatalog;
        this.patientDirectory = patientDirectory;
        initComponents();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPersonId = new javax.swing.JTextField();
        lblSearch1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        btnAddPerson = new javax.swing.JButton();
        btnViewPerson = new javax.swing.JButton();
        btnUpdatePerson = new javax.swing.JButton();
        btnDeletePerson = new javax.swing.JButton();
        btnSearchById = new javax.swing.JButton();
        btnAddPerson1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPersonId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(txtPersonId, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 288, 33));

        lblSearch1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSearch1.setForeground(new java.awt.Color(0, 102, 102));
        lblSearch1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSearch1.setText("Persons List :");
        add(lblSearch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 130, 32));

        tblPerson.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblPerson.getTableHeader().setFont(new Font("Tahoma", 1, 18));
        tblPerson.getTableHeader().setForeground(new java.awt.Color(0, 102, 102));
        tblPerson.getTableHeader().setOpaque(false);
        tblPerson.getTableHeader().setBackground(new java.awt.Color(255, 255, 255));
        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Person Id", "Name", "Birthdate", "Phone Number", "HouseId", "SSN"
            }
        ));
        tblPerson.setRowHeight(25);
        tblPerson.setSelectionBackground(new java.awt.Color(0, 102, 102));
        jScrollPane1.setViewportView(tblPerson);
        if (tblPerson.getColumnModel().getColumnCount() > 0) {
            tblPerson.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 953, 207));

        btnAddPerson.setBackground(new java.awt.Color(0, 102, 102));
        btnAddPerson.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAddPerson.setForeground(new java.awt.Color(255, 255, 255));
        btnAddPerson.setText("Add Person");
        btnAddPerson.setBorderPainted(false);
        btnAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPersonActionPerformed(evt);
            }
        });
        add(btnAddPerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 410, 199, 41));

        btnViewPerson.setBackground(new java.awt.Color(0, 102, 102));
        btnViewPerson.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnViewPerson.setForeground(new java.awt.Color(255, 255, 255));
        btnViewPerson.setText("View Person");
        btnViewPerson.setBorderPainted(false);
        btnViewPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPersonActionPerformed(evt);
            }
        });
        add(btnViewPerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 410, 199, 41));

        btnUpdatePerson.setBackground(new java.awt.Color(0, 102, 102));
        btnUpdatePerson.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnUpdatePerson.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdatePerson.setText("Update Person");
        btnUpdatePerson.setBorderPainted(false);
        btnUpdatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePersonActionPerformed(evt);
            }
        });
        add(btnUpdatePerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 410, 199, 41));

        btnDeletePerson.setBackground(new java.awt.Color(0, 102, 102));
        btnDeletePerson.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDeletePerson.setForeground(new java.awt.Color(255, 255, 255));
        btnDeletePerson.setText("Delete Person");
        btnDeletePerson.setBorderPainted(false);
        btnDeletePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePersonActionPerformed(evt);
            }
        });
        add(btnDeletePerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 410, 199, 41));

        btnSearchById.setBackground(new java.awt.Color(0, 102, 102));
        btnSearchById.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSearchById.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchById.setText("Search by Person ID");
        btnSearchById.setBorderPainted(false);
        btnSearchById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByIdActionPerformed(evt);
            }
        });
        add(btnSearchById, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 222, -1));

        btnAddPerson1.setBackground(new java.awt.Color(0, 102, 102));
        btnAddPerson1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAddPerson1.setForeground(new java.awt.Color(255, 255, 255));
        btnAddPerson1.setText("Refresh Table");
        btnAddPerson1.setBorderPainted(false);
        btnAddPerson1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPerson1ActionPerformed(evt);
            }
        });
        add(btnAddPerson1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 80, 199, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPersonActionPerformed
        // TODO add your handling code here:
        AddPersonJPanel pdjp = new AddPersonJPanel(adminBodyJPanel,personDirectory, cityCatalog, patientDirectory);
        adminBodyJPanel.add("AddPersonJPanel", pdjp);
        CardLayout layout = (CardLayout) adminBodyJPanel.getLayout();
        layout.next(adminBodyJPanel);
    }//GEN-LAST:event_btnAddPersonActionPerformed

    private void btnViewPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPersonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPerson.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Person person = (Person) tblPerson.getValueAt(selectedRowIndex, 0);
        ViewPersonJPanel pdjp = new ViewPersonJPanel(adminBodyJPanel,person, cityCatalog, personDirectory);
        adminBodyJPanel.add("ViewPersonJPanel", pdjp);
        CardLayout layout = (CardLayout) adminBodyJPanel.getLayout();
        layout.next(adminBodyJPanel);       
    }//GEN-LAST:event_btnViewPersonActionPerformed

    private void btnUpdatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePersonActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblPerson.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Person person = (Person) tblPerson.getValueAt(selectedRowIndex, 0);
        UpdatePersonJPanel pdjp = new UpdatePersonJPanel(adminBodyJPanel,person, cityCatalog, personDirectory);
        adminBodyJPanel.add("UpdatePersonJPanel", pdjp);
        CardLayout layout = (CardLayout) adminBodyJPanel.getLayout();
        layout.next(adminBodyJPanel);
    }//GEN-LAST:event_btnUpdatePersonActionPerformed

    private void btnDeletePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePersonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPerson.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Person person = (Person) tblPerson.getValueAt(selectedRowIndex, 0);
        Patient patient = patientDirectory.getPatientDirectory().stream().filter(p -> p.getPersonId() == person.getId()).collect(Collectors.toList()).get(0);
        patientDirectory.getPatientDirectory().remove(patient);
        personDirectory.getPersonDirectory().remove(person);
        JOptionPane.showMessageDialog(null, "Successfully Deleted!!", "Info", JOptionPane.INFORMATION_MESSAGE);
        refreshTable();
    }//GEN-LAST:event_btnDeletePersonActionPerformed

    private void btnSearchByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByIdActionPerformed
        // TODO add your handling code here:
        Integer personId;
        try {
            personId = Integer.parseInt(txtPersonId.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Please Enter Valid Id", "error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPerson.getModel();
        model.setRowCount(0);
        personDirectory.getPersonDirectory().forEach(p -> {
            if(p.getId() == personId){
                Object row[] = new Object[6];
                row[0] = p;
                row[1] = p.getFirstName() + " " + p.getLastName();
                row[2] = (p.getBirthDate().getMonth() + 1) + "-" + (p.getBirthDate().getDate()) + "-" + (p.getBirthDate().getYear() + 1900);
                row[3] = p.getPhoneNumber();
                row[4] = p.getHouseId();
                row[5] = p.getSsn();
                model.addRow(row);
            }
        });
        
    }//GEN-LAST:event_btnSearchByIdActionPerformed

    private void btnAddPerson1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPerson1ActionPerformed
        // TODO add your handling code here:
        txtPersonId.setText("");
        refreshTable();
    }//GEN-LAST:event_btnAddPerson1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPerson;
    private javax.swing.JButton btnAddPerson1;
    private javax.swing.JButton btnDeletePerson;
    private javax.swing.JButton btnSearchById;
    private javax.swing.JButton btnUpdatePerson;
    private javax.swing.JButton btnViewPerson;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearch1;
    private javax.swing.JTable tblPerson;
    private javax.swing.JTextField txtPersonId;
    // End of variables declaration//GEN-END:variables

    public void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) tblPerson.getModel();
        model.setRowCount(0);
        for (Person p : personDirectory.getPersonDirectory()) {
            Object row[] = new Object[6];
            row[0] = p;
            row[1] = p.getFirstName() + " " + p.getLastName();
            row[2] = (p.getBirthDate().getMonth() + 1) + "-" + (p.getBirthDate().getDate()) + "-" + (p.getBirthDate().getYear() + 1900);
            row[3] = p.getPhoneNumber();
            row[4] = p.getHouseId();
            row[5] = p.getSsn();
            model.addRow(row);
        }
    }
}
