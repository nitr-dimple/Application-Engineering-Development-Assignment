/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Admin;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.CityCatalog;
import model.Community;
import model.Encounter;
import model.House;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Dimple Patel
 */
public class AbnormalPatientSummaryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonDirectoryJPanel
     */
    private JPanel adminBodyJPanel;
    private PersonDirectory personDirectory;
    private CityCatalog cityCatalog;
    private PatientDirectory patientDirectory;

    public AbnormalPatientSummaryJPanel(JPanel adminBodyJPanel, PersonDirectory personDirectory, CityCatalog cityCatalog, PatientDirectory patientDirectory) {
        this.adminBodyJPanel = adminBodyJPanel;
        this.personDirectory = personDirectory;
        this.cityCatalog = cityCatalog;
        this.patientDirectory = patientDirectory;
        initComponents();
        showPieChart();
        refreshCombo();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jplCityAll3 = new javax.swing.JPanel();
        jplcommunity = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jplCityAll = new javax.swing.JPanel();
        jplCityAll1 = new javax.swing.JPanel();
        jplcity = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txttnp = new javax.swing.JLabel();
        txttap = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbCity = new javax.swing.JComboBox<>();
        cmbCommunity = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txttnp1 = new javax.swing.JLabel();
        txttap1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txttnp2 = new javax.swing.JLabel();
        txttap2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPerson = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPerson2 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPerson1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jplCityAll3.setLayout(new javax.swing.BoxLayout(jplCityAll3, javax.swing.BoxLayout.LINE_AXIS));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("No Data Found!");

        javax.swing.GroupLayout jplcommunityLayout = new javax.swing.GroupLayout(jplcommunity);
        jplcommunity.setLayout(jplcommunityLayout);
        jplcommunityLayout.setHorizontalGroup(
            jplcommunityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jplcommunityLayout.setVerticalGroup(
            jplcommunityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
        );

        jplCityAll3.add(jplcommunity);

        add(jplCityAll3, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 280, 430, 370));

        jplCityAll.setLayout(new javax.swing.BoxLayout(jplCityAll, javax.swing.BoxLayout.LINE_AXIS));
        add(jplCityAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 430, 370));

        jplCityAll1.setLayout(new javax.swing.BoxLayout(jplCityAll1, javax.swing.BoxLayout.LINE_AXIS));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("No Data Found!");

        javax.swing.GroupLayout jplcityLayout = new javax.swing.GroupLayout(jplcity);
        jplcity.setLayout(jplcityLayout);
        jplcityLayout.setHorizontalGroup(
            jplcityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        jplcityLayout.setVerticalGroup(
            jplcityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
        );

        jplCityAll1.add(jplcity);

        add(jplCityAll1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 280, 450, 370));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Pie Chart for Abnormal/Normal Patient in All City");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 450, 50));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Total Normal Patient : ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Total Abnormal Patient : ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 210, -1));

        txttnp.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txttnp.setForeground(new java.awt.Color(0, 102, 102));
        add(txttnp, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 160, 30));

        txttap.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txttap.setForeground(new java.awt.Color(0, 102, 102));
        add(txttap, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 160, 30));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Display By Community :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 20, 210, 30));

        cmbCity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbCity.setForeground(new java.awt.Color(0, 102, 102));
        cmbCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCityActionPerformed(evt);
            }
        });
        add(cmbCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 180, -1));

        cmbCommunity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbCommunity.setForeground(new java.awt.Color(0, 102, 102));
        cmbCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCommunityActionPerformed(evt);
            }
        });
        add(cmbCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 20, 170, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Display By City:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 140, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Total Normal Patient : ");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 240, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Total Abnormal Patient : ");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, 210, -1));

        txttnp1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txttnp1.setForeground(new java.awt.Color(0, 102, 102));
        add(txttnp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 240, 160, 30));

        txttap1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txttap1.setForeground(new java.awt.Color(0, 102, 102));
        add(txttap1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 210, 160, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Total Normal Patient : ");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 240, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText("Total Abnormal Patient : ");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 210, 210, -1));

        txttnp2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txttnp2.setForeground(new java.awt.Color(0, 102, 102));
        add(txttnp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 240, 160, 30));

        txttap2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txttap2.setForeground(new java.awt.Color(0, 102, 102));
        add(txttap2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 210, 160, 30));

        tblPerson.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblPerson.getTableHeader().setFont(new Font("Tahoma", 1, 18));
        tblPerson.getTableHeader().setForeground(new java.awt.Color(0, 102, 102));
        tblPerson.getTableHeader().setOpaque(false);
        tblPerson.getTableHeader().setBackground(new java.awt.Color(255, 255, 255));
        tblPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Name", "Abnormal"
            }
        ));
        tblPerson.setRowHeight(25);
        tblPerson.setSelectionBackground(new java.awt.Color(0, 102, 102));
        jScrollPane1.setViewportView(tblPerson);
        if (tblPerson.getColumnModel().getColumnCount() > 0) {
            tblPerson.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblPerson.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 130));

        tblPerson2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblPerson2.getTableHeader().setFont(new Font("Tahoma", 1, 18));
        tblPerson2.getTableHeader().setForeground(new java.awt.Color(0, 102, 102));
        tblPerson2.getTableHeader().setOpaque(false);
        tblPerson2.getTableHeader().setBackground(new java.awt.Color(255, 255, 255));
        tblPerson2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Name", "Abnormal"
            }
        ));
        tblPerson2.setRowHeight(25);
        tblPerson2.setSelectionBackground(new java.awt.Color(0, 102, 102));
        jScrollPane3.setViewportView(tblPerson2);
        if (tblPerson2.getColumnModel().getColumnCount() > 0) {
            tblPerson2.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblPerson2.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, -1, 130));

        tblPerson1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblPerson1.getTableHeader().setFont(new Font("Tahoma", 1, 18));
        tblPerson1.getTableHeader().setForeground(new java.awt.Color(0, 102, 102));
        tblPerson1.getTableHeader().setOpaque(false);
        tblPerson1.getTableHeader().setBackground(new java.awt.Color(255, 255, 255));
        tblPerson1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Name", "Abnormal"
            }
        ));
        tblPerson1.setRowHeight(25);
        tblPerson1.setSelectionBackground(new java.awt.Color(0, 102, 102));
        jScrollPane2.setViewportView(tblPerson1);
        if (tblPerson1.getColumnModel().getColumnCount() > 0) {
            tblPerson1.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblPerson1.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 60, -1, 130));
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCityActionPerformed
        // TODO add your handling code here:

        City c = (City) cmbCity.getSelectedItem();
        Integer abnormal = 0;
        Integer normal = 0;
        cmbCommunity.removeAllItems();
        c.getCommunityList().forEach(community -> {
            cmbCommunity.addItem(community);
        });
        
        DefaultTableModel model = (DefaultTableModel) tblPerson2.getModel();
        model.setRowCount(0);

        for (Community community : c.getCommunityList()) {
            for (House house : community.getHouseList()) {
                for (Person person : house.getPersonList()) {
                    if (person.getPatient().isIsNormal()) {
                        normal++;
                    } else {
                        abnormal++;
                    }
                    
                    Object row[] = new Object[3];
                    row[0] = person.getPatient();
                    row[1] = person.getFirstName() + " " + person.getLastName();
                    row[2] = person.getPatient().isIsNormal() ? "No" : "Yes";
                    model.addRow(row);
                }
            }
        }

        if (abnormal.equals(0) && normal.equals(0)) {
            txttap1.setText(abnormal.toString());
            txttnp1.setText(normal.toString());
            jplCityAll1.removeAll();
            jplCityAll1.repaint();
            jplCityAll1.add(jplcity);
        } else {
            txttap1.setText(abnormal.toString());
            txttnp1.setText(normal.toString());
            DefaultPieDataset barDataset = new DefaultPieDataset();
            barDataset.setValue("Normal", new Integer(normal));
            barDataset.setValue("Abnormal", new Integer(abnormal));

            //create chart
            JFreeChart piechart = ChartFactory.createPieChart("Abnormal/Normal Patient in " + c, barDataset, true, true, false);
            PiePlot piePlot = (PiePlot) piechart.getPlot();

            piePlot.setSectionPaint("Abnormal", new Color(75, 228, 245));
            piePlot.setSectionPaint("Normal", new Color(180, 131, 242));

            piePlot.setBackgroundPaint(Color.white);

            //create chartPanel to display chart(graph)
            ChartPanel barChartPanel = new ChartPanel(piechart);
            jplCityAll1.removeAll();
            jplCityAll1.repaint();
            jplCityAll1.add(barChartPanel, BorderLayout.CENTER);
            jplCityAll1.validate();
        }


    }//GEN-LAST:event_cmbCityActionPerformed

    private void cmbCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCommunityActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblPerson1.getModel();
        model.setRowCount(0);
        if (cmbCommunity.getSelectedItem() != null) {
            Community community = (Community) cmbCommunity.getSelectedItem();
            Integer abnormal = 0;
            Integer normal = 0;

            for (House house : community.getHouseList()) {
                for (Person person : house.getPersonList()) {
                    if (person.getPatient().isIsNormal()) {
                        normal++;
                    } else {
                        abnormal++;
                    }
                    Object row[] = new Object[3];
                    row[0] = person.getPatient();
                    row[1] = person.getFirstName() + " " + person.getLastName();
                    row[2] = person.getPatient().isIsNormal() ? "No" : "Yes";
                    model.addRow(row);
                }
            }

            if (abnormal.equals(0) && normal.equals(0)) {
                txttap2.setText(abnormal.toString());
                txttnp2.setText(normal.toString());
                jplCityAll3.removeAll();
                jplCityAll3.repaint();
                jplCityAll3.add(jplcommunity);
            } else {
                txttap2.setText(abnormal.toString());
                txttnp2.setText(normal.toString());
                DefaultPieDataset barDataset = new DefaultPieDataset();
                barDataset.setValue("Normal", new Integer(normal));
                barDataset.setValue("Abnormal", new Integer(abnormal));

                //create chart
                JFreeChart piechart = ChartFactory.createPieChart("Abnormal/Normal Patient in " + community, barDataset, true, true, false);
                PiePlot piePlot = (PiePlot) piechart.getPlot();

                piePlot.setSectionPaint("Abnormal", new Color(75, 228, 245));
                piePlot.setSectionPaint("Normal", new Color(180, 131, 242));

                piePlot.setBackgroundPaint(Color.white);

                //create chartPanel to display chart(graph)
                ChartPanel barChartPanel = new ChartPanel(piechart);
                jplCityAll3.removeAll();
                jplCityAll3.repaint();
                jplCityAll3.add(barChartPanel, BorderLayout.CENTER);
                jplCityAll3.validate();
            }
        }

    }//GEN-LAST:event_cmbCommunityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> cmbCity;
    private javax.swing.JComboBox<Object> cmbCommunity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel jplCityAll;
    private javax.swing.JPanel jplCityAll1;
    private javax.swing.JPanel jplCityAll3;
    private javax.swing.JPanel jplcity;
    private javax.swing.JPanel jplcommunity;
    private javax.swing.JTable tblPerson;
    private javax.swing.JTable tblPerson1;
    private javax.swing.JTable tblPerson2;
    private javax.swing.JLabel txttap;
    private javax.swing.JLabel txttap1;
    private javax.swing.JLabel txttap2;
    private javax.swing.JLabel txttnp;
    private javax.swing.JLabel txttnp1;
    private javax.swing.JLabel txttnp2;
    // End of variables declaration//GEN-END:variables

    public void showPieChart() {

        //create dataset
        DefaultPieDataset barDataset = new DefaultPieDataset();
        Integer normalcount = 0;
        for (Patient p : patientDirectory.getPatientDirectory()) {
            if (p.isIsNormal()) {
                normalcount++;
            }
        }
        Integer abnormal = patientDirectory.getPatientDirectory().size() - normalcount;
        txttnp.setText(normalcount.toString());
        txttap.setText(abnormal.toString());

        barDataset.setValue("Normal", new Integer(normalcount));
        barDataset.setValue("Abnormal", new Integer(patientDirectory.getPatientDirectory().size() - normalcount));

        //create chart
        JFreeChart piechart = ChartFactory.createPieChart("Abnormal/Normal Patient in all city", barDataset, true, true, false);
        PiePlot piePlot = (PiePlot) piechart.getPlot();

        //changing pie chart blocks colors
        //        piePlot.setSectionPaint("Abnormal", new Color(255,102,153));
        //        piePlot.setSectionPaint("Normal", new Color(0,204,204));
        piePlot.setSectionPaint("Abnormal", new Color(75, 228, 245));
        piePlot.setSectionPaint("Normal", new Color(180, 131, 242));

        piePlot.setBackgroundPaint(Color.white);

        //create chartPanel to display chart(graph)
        ChartPanel barChartPanel = new ChartPanel(piechart);
        jplCityAll.removeAll();
        jplCityAll.add(barChartPanel, BorderLayout.CENTER);
        jplCityAll.validate();

    }

    private void refreshCombo() {
        cmbCity.removeAllItems();
        cmbCommunity.removeAllItems();
        cityCatalog.getCityList().forEach(city -> {
            cmbCity.addItem(city);
        });
    }
    
    public void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) tblPerson.getModel();
        model.setRowCount(0);
        for (Patient p : patientDirectory.getPatientDirectory()) {
            Object row[] = new Object[3];
            row[0] = p;
            Person person = personDirectory.getPersonDirectory().stream().filter(per -> per.getId() == p.getPersonId()).collect(Collectors.toList()).get(0);
            row[1] = person.getFirstName() + " " + person.getLastName();
            row[2] = p.isIsNormal() ? "No" : "Yes";
            model.addRow(row);
        }
    }
}
