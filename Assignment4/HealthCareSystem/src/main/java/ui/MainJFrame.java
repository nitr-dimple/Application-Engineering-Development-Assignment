/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.awt.CardLayout;
import java.io.File;
import java.io.IOException;
import model.CityCatalog;
import model.PatientDirectory;
import model.PersonDirectory;

/**
 *
 * @author Dimple Patel
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    
    ObjectMapper mapper;
    PersonDirectory personDirectory;
    CityCatalog cityCatalog;
    PatientDirectory patientDirectory;
    
    public MainJFrame() {
        initComponents();
        personDirectory = new PersonDirectory();
        patientDirectory = new PatientDirectory();
        cityCatalog = new CityCatalog();
        populateDummyData();
        setSize(1540,830);
        setTitle("HealthCare System");
        setMainFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userProcessContainer.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userProcessContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userProcessContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    private void setMainFrame() {
        LoginJPanel ljpl = new LoginJPanel(userProcessContainer, personDirectory, cityCatalog, patientDirectory);
        userProcessContainer.add("LoginJPanel", ljpl);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel userProcessContainer;
    // End of variables declaration//GEN-END:variables

    private void populateDummyData() {
        mapper = new ObjectMapper();
        try {
            personDirectory = mapper.readValue(new File("src/main/java/config/dummyData.json"), PersonDirectory.class);
            cityCatalog = mapper.readValue(new File("src/main/java/config/CityData.json"), CityCatalog.class);
            personDirectory.getPersonDirectory().forEach(person -> {
                cityCatalog.getCityList().forEach(city -> {
                    city.getCommunityList().forEach(community -> {
                        community.getHouseList().forEach(house -> {
                            if(house.getHouseId().equals(person.getHouseId())) {
                                house.addPerson(person);
                            }
                        });
                    });
                });
            });
            personDirectory.getPersonDirectory().forEach(person -> {
                person.getPatient().getEncounterHistory().getEncounterList().forEach(encounter -> {
                    encounter.getVitalSigns().isPatientAbnormal(person.getPatient());
                });  
                person.getPatient().setPersonId(person.getId());
                patientDirectory.addPatient(person.getPatient());
            });
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
